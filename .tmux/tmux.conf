# List of plugins


set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'wfxr/tmux-net-speed'
set -g @plugin 'soyuka/tmux-current-pane-hostname'
set -g @plugin 'jdxcode/tmux-cpu-info'
set -g @plugin 'laomafeima/tmux-mem'
set -g @plugin 'tmux-plugins/tmux-fpp'
set -g @plugin 'tmux-plugins/tmux-urlview'
# -- general -------------------------------------------------------------------
set -g @continuum-restore 'on'
set -g @continuum-boot 'on'
set -g default-terminal "screen-256color" # colors!
set -g xterm-keys on
set -s escape-time 10                      # faster command sequences
set -sg repeat-time 600                   # increase repeat timeout
set -s focus-events on
#set -s set-clipboard off

set -g prefix2 C-a                        # GNU-Screen compatible prefix
bind C-a send-prefix -2

set -q -g status-utf8 on                  # expect UTF-8 (tmux < 2.2)
setw -q -g utf8 on

set -g history-limit 5000                 # boost history

# edit configuration
bind e new-window -n 'tmux.conf' "bash -c 'nvim ~/.tmux/tmux.conf && tmux source ~/.tmux/tmux.conf && tmux display \"Config reloaded\"'"
# reload configuration
bind r source-file ~/.tmux/tmux.conf \; display '~/.tmux/tmux.conf sourced'

bind R command-prompt -I "#{session_name}" "rename-session '%%'"

# -- display -------------------------------------------------------------------

setw -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed
set -g mouse on
set -g set-titles on          # set terminal title

set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time

set -g status-interval 10     # redraw status line every 10 seconds

# activity
set -g monitor-activity on
set -g visual-activity off

# -- navigation ----------------------------------------------------------------

# create session
bind C-c new-session

# find session
bind C-f command-prompt -p find-session 'switch-client -t %%'

# split current window horizontally
bind - split-window -v
# split current window vertically
bind _ split-window -h

# pane navigation
bind -r h select-pane -L  # move left
bind -r j select-pane -D  # move down
bind -r k select-pane -U  # move up
bind -r l select-pane -R  # move right
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

# pane movement shortcuts
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Resize pane shortcuts
bind -r H resize-pane -L 10
bind -r J resize-pane -D 10
bind -r K resize-pane -U 10
bind -r L resize-pane -R 10

# window navigation
unbind n
unbind p
bind -r C-h previous-window # select previous window
bind -r C-l next-window     # select next window
bind Tab last-window        # move to last active window

unbind h
unbind v
unbind V
bind b split-window -h -c "#{pane_current_path}"
bind v split-window -v -c "#{pane_current_path}"
bind c new-window -c '#{pane_current_path}' # Create new window
bind V split-window -v -l 10 -c '#{pane_current_path}' 

# window navigation
unbind n
unbind p
bind -r C-h previous-window # select previous window
bind -r C-l next-window     # select next window
bind Tab last-window        # move to last active window


# Kill pane/window/session shortcuts
bind x kill-pane
bind X kill-window
bind C-x confirm-before -p "kill other windows? (y/n)" "kill-window -a"
bind Q confirm-before -p "kill-session #S? (y/n)" kill-session

# -- copy mode -----------------------------------------------------------------

# set vi mode for copy mode
setw -g mode-keys vi

bind Enter copy-mode # enter copy mode

run -b 'tmux bind -t vi-copy v begin-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi v send -X begin-selection 2> /dev/null || true'
run -b 'tmux bind -t vi-copy C-v rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi C-v send -X rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -t vi-copy y copy-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi y send -X copy-selection-and-cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy Escape cancel 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi Escape send -X cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy H start-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi H send -X start-of-line 2> /dev/null || true'
run -b 'tmux bind -t vi-copy L end-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi L send -X end-of-line 2> /dev/null || true'

# copy to X11 clipboard
if -b 'command -v xsel > /dev/null 3>&1' 'bind y run -b "tmux save-buffer - | xsel -i -b"'
#if -b '! command -v xsel > /dev/null 2>&1 && command -v xclip > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xclip -i -selection clipboard >/dev/null 2>&1"'
## copy to macOS clipboard
#if -b 'command -v pbcopy > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | pbcopy"'
#if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | reattach-to-user-namespace pbcopy"'
## copy to Windows clipboard
#if -b 'command -v clip.exe > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | clip.exe"'
#if -b '[ -c /dev/clipboard ]' 'bind y run -b "tmux save-buffer - > /dev/clipboard"'

# -- buffers -------------------------------------------------------------------

bind B list-buffers  # list paste buffers
bind p paste-buffer  # paste from the top paste buffer
bind P choose-buffer # choose which buffer to paste from

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
#is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
#bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
#bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
#bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
#bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
#bind-key -n 'C-\' if-shell "$is_vim" 'send-keys C-\\' 'select-pane -l'
# mouse mode 

# -- custom panes -------------------------------------------------------------------

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

is_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"

bind -n C-h run "($is_vim && tmux send-keys C-h) || \
                          tmux select-pane -L"

bind -n C-j run "($is_vim && tmux send-keys C-j)  || \
                         ($is_fzf && tmux send-keys C-j) || \
                         tmux select-pane -D"

bind -n C-k run "($is_vim && tmux send-keys C-k) || \
                          ($is_fzf && tmux send-keys C-k)  || \
                          tmux select-pane -U"

bind -n C-l run  "($is_vim && tmux send-keys C-l) || \
                          tmux select-pane -R"

bind -n 'C-\' if-shell "$is_vim" "send-keys C-\\\\" "select-pane"

# -- status bar -------------------------------------------------------------------

# Options
right_arrow_icon=''
left_arrow_icon=
upload_speed_icon=''
download_speed_icon=''
session_icon=''
user_icon=''
time_icon=''
date_icon=''
time_format='%T'
date_format='%F'

# Status options
set-option -gq status-interval 1
set-option -gq status on

# Basic status bar colors
set-option -gq status-fg white
set-option -gq status-bg black
set-option -gq status-attr none

#     
# Left side of status bar
set-option -gq status-left-bg brightblack
set-option -gq status-left-fg brightblack
set-option -gq status-left-length 150

#LS="#[fg=black,bg=cyan,bold] $user_icon #U@#H #(tmux-cpu-info) #[fg=cyan,bg=black,nobold]$right_arrow_icon#[fg=white,bg=black] $session_icon #S "
LS="#[fg=black,bg=cyan,bold] $session_icon #S #[fg=cyan,bg=black,nobold]$right_arrow_icon#[fg=white,bg=black]#{mem_fg_color} #{mem_icon} #[fg=white,bg=black]#{mem_percentage} "
LS="$LS#[fg=black,bg=brightblack]$right_arrow_icon#[fg=brightcyan,bg=brightblack] $upload_speed_icon #{upload_speed} #[fg=brightblack,bg=black]$right_arrow_icon"
set-option -gq status-left "$LS"

# Right side of status bar
set-option -gq status-right-bg "black"
set-option -gq status-right-fg "brightblack"
set-option -gq status-right-length 150
RS="#[fg=white,bg=black] $time_icon $time_format #[fg=brightcyan,bg=black]$left_arrow_icon#[fg=black,bg=brightcyan] $date_icon $date_format "
RS="#[fg=brightblack,bg=black]$left_arrow_icon#[fg=brightcyan,bg=brightblack] $download_speed_icon #{download_speed} #[fg=black,bg=brightblack]$left_arrow_icon$RS"
RS="#{prefix_highlight}$RS"
set-option -gq status-right "$RS"

set -g @prefix_highlight_output_prefix "#[fg=brightcyan]#[bg=black]#[nobold]#[noitalics]#[nounderscore]#[bg=brightcyan]#[fg=black]"
set -g @prefix_highlight_output_suffix ""
set -g @prefix_highlight_copy_mode_attr "fg=brightcyan,bg=black,bold"
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_show_sync_mode 'on'
# Window status
#set-option -gq window-status-format " #I:#W#F "
#set-option -gq window-status-current-format "#[fg=$BG,bg=$G06]$right_arrow_icon#[fg=$TC,bold] #I:#W#F #[fg=$G06,bg=$BG,nobold]$right_arrow_icon"
set -g window-status-format "#[fg=black,bg=brightblack,nobold,noitalics,nounderscore] #[fg=white,bg=brightblack]#I #[fg=white,bg=brightblack,nobold,noitalics,nounderscore] #[fg=white,bg=brightblack]#W #F #[fg=brightblack,bg=black,nobold,noitalics,nounderscore]"
set -g window-status-current-format "#[fg=black,bg=cyan,nobold,noitalics,nounderscore] #[fg=black,bg=cyan]#I #[fg=black,bg=cyan,nobold,noitalics,nounderscore] #[fg=black,bg=cyan]#W #F #[fg=cyan,bg=black,nobold,noitalics,nounderscore]"
setw -g window-status-activity-style fg=brightcyan,bold,bg=brightblack
# Window separator
set-option -gq window-status-separator ""

# Window status alignment
set-option -gq status-justify centre

# Current window status
set -g pane-active-border-style bg=default,fg=blue

# Pane border
set -g pane-border-style bg=default,fg=brightblack

# Active pane border
set-option -gq pane-active-border-style bg=default,fg=blue

# Pane number indicator
set-option -gq display-panes-colour black
set-option -gq display-panes-active-colour brightblack

# Clock mode
set-option -gq clock-mode-colour brightcyan
set-option -gq clock-mode-style 24

# Message
set -g message-style bg=brightblack,fg=cyan

# Command message
set -g message-command-style bg=brightblack,fg=cyan

# Copy mode highlight
set-option -gq mode-style bg=brightblack,fg=yellow


#---------------------------- old config
## Plugin Support 
## tmux-prefix-highlight 
#set -g @prefix_highlight_fg black
#set -g @prefix_highlight_bg brightcyan
#
## Options 
#set -g status on
#
## Status 
## Layout 
#set -g status-justify left
#
## Colors 
#set -g status-style bg=black,fg=white
#
## Panes 
#set -g pane-border-style fg=black
#set -g pane-active-border-style fg=brightcyan
#set -g display-panes-colour black
#set -g display-panes-active-colour brightblack
## active window text color
#setw -g window-status-activity-style fg=brightcyan,bold,bg=brightblack
## Clock Mode 
#setw -g clock-mode-colour cyan
#
## Messages
#set -g message-style bg=brightblack,fg=cyan
#set -g message-command-style bg=brightblack,fg=cyan
#
#set-environment -g NORD_TMUX_STATUS_TIME_FORMAT "%I:%M %p"
## Plugin Support 
## tmux-prefix-highlight 
#set -g @prefix_highlight_output_prefix "#[fg=brightcyan]#[bg=black]#[nobold]#[noitalics]#[nounderscore]#[bg=brightcyan]#[fg=black]"
#set -g @prefix_highlight_output_suffix ""
#set -g @prefix_highlight_copy_mode_attr "fg=brightcyan,bg=black,bold"
#
## Status 
##set-option -g status-style fg=white,bg=black,default
##set-window-option -g window-status-style fg=black,default #bg=black,nobold,noitalics,nounderscore 
##set-window-option -g window-status-current-style fg=black,bg=cyan,nobold,noitalics,nounderscore 
## Bars 
##set -g status-left "#[fg=black,bg=blue,bold] #S#[fg=blue,bg=black,nobold,noitalics,nounderscore]"
#set -g status-left "#[fg=black,bg=blue,bold] #S #[fg=blue,bg=black,nobold,noitalics,nounderscore]"
#set -g status-right "#{prefix_highlight}#[fg=brightblack,bg=black,nobold,noitalics,nounderscore]#[fg=white,bg=brightblack] %Y-%m-%d #[fg=white,bg=brightblack,nobold,noitalics,nounderscore]#[fg=white,bg=brightblack] %H:%M #[fg=cyan,bg=brightblack,nobold,noitalics,nounderscore]#[fg=black,bg=cyan,bold] #H "
#
## Windows 
#set -g window-status-format "#[fg=black,bg=brightblack,nobold,noitalics,nounderscore] #[fg=white,bg=brightblack]#I #[fg=white,bg=brightblack,nobold,noitalics,nounderscore] #[fg=white,bg=brightblack]#W #F #[fg=brightblack,bg=black,nobold,noitalics,nounderscore]"
#set -g window-status-current-format "#[fg=black,bg=cyan,nobold,noitalics,nounderscore] #[fg=black,bg=cyan]#I #[fg=black,bg=cyan,nobold,noitalics,nounderscore] #[fg=black,bg=cyan]#W #F #[fg=cyan,bg=black,nobold,noitalics,nounderscore]"
#set -g window-status-separator ""


# Nested sessions

# Session is considered to be remote when we ssh into host
if-shell 'test -n "$SSH_CLIENT"' \
    'source-file ~/.tmux/tmux.remote.conf'

# We want to have single prefix key "C-a", usable both for local and remote session
# we don't want to "C-a" + "a" approach either
# Idea is to turn off all key bindings and prefix handling on local session,
# so that all keystrokes are passed to inner/remote session

# see: toggle on/off all keybindings · Issue #237 · tmux/tmux - https://github.com/tmux/tmux/issues/237

# Also, change some visual styles when window keys are off
bind -T root F12  \
    set prefix2 None \;\
    set key-table off \;\
    set status-position top \;\
    set status-right "#{prefix_highlight}#[fg=brightblack,bg=black,nobold,noitalics,nounderscore]#[fg=white,bg=brightblack] %Y-%m-%d #[fg=white,bg=brightblack,nobold,noitalics,nounderscore]#[fg=white,bg=brightblack] %H:%M #[fg=cyan,bg=brightblack,nobold,noitalics,nounderscore]#[fg=white,bg=cyan,bold] $user_icon #U@#H " \;\
    if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
    refresh-client -S \;\

bind -T off F12 \
  set -u prefix2 \;\
  set -u status-position \;\
  set -u status-right \;\
  set -u key-table \;\
  refresh-client -S


run -b '~/.tmux/plugins/tpm/tpm'


